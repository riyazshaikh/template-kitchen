
<script>
!function(){var e={},t={},o="undefined"!=typeof HTMLDocument?HTMLDocument.prototype:Document.prototype,n="undefined"!=typeof HTMLElement?HTMLElement.prototype:Element.prototype,r=document.createElement("style"),i=document.createElement("style"),c=document.getElementsByTagName("head")[0],s=["animationstart","oAnimationStart","MSAnimationStart","webkitAnimationStart"],a=function(t){t.selector=(e[t.animationName]||{}).selector;var o=[];((this.selectorListeners||{})[t.animationName]||[]).forEach(function(e){e.call(this,t)===!1&&o.push(e)},this),o.forEach(function(e){this.removeSelectorListener(t.selector,e)},this)},l=function(){var e="animation-duration: 0.001s;",t="animation-name: SelectorListener !important;",o="visibility:hidden;",n=window.getComputedStyle(document.documentElement,""),r=(Array.prototype.slice.call(n).join("").match(/moz|webkit|ms/)||""===n.OLink&&["o"])[0];return{css:"-"+r+"-",properties:"{"+o+e+t+"-"+r+"-"+e+"-"+r+"-"+t+"}",keyframes:!(!window.CSSKeyframesRule&&!window["WebKit|Moz|MS|O".match(new RegExp("("+r+")","i"))[1]+"CSSKeyframesRule"])}}();r.type=i.type="text/css",c.appendChild(r),c.appendChild(i),o.addSelectorListener=n.addSelectorListener=function(o,n){var c=t[o],m=this.selectorListeners=this.selectorListeners||{};if(c)e[c].count++;else{c=t[o]="SelectorListener-"+Math.random().toString(16).substr(2,9);var u=document.createTextNode("@"+(l.keyframes?l.css:"")+"keyframes "+c+" {from { outline-color: #fff; } to { outline-color: #000; }}");i.appendChild(u);var d=document.createTextNode(o+l.properties.replace(/SelectorListener/g,c));r.appendChild(d),e[c]={count:1,selector:o,keyframe:u,rule:d}}m.count?m.count++:(m.count=1,s.forEach(function(e){this.addEventListener(e,a,!1)},this)),(m[c]=m[c]||[]).push(n)},o.removeSelectorListener=n.removeSelectorListener=function(o,n){var c=this.selectorListeners||{},l=t[o],m=c[l]||[],u=m.indexOf(n);if(u>-1){var d=e[t[o]];d.count--,d.count||(r.removeChild(d.rule),i.removeChild(d.keyframe),delete e[l],delete t[o]),c.count--,m.splice(u,1),c.count||s.forEach(function(e){this.removeEventListener(e,a,!1)},this)}},HTMLDocument.prototype.onSelector=HTMLElement.prototype.onSelector=function(e,t){this.addSelectorListener(e,function(e){return t(e),!1})}}();
</script>

<script>
window.SquareMart = {};

SquareMart.Utils = {
	currentScript: function() {
		return document.currentScript || (function() {
      var scripts = document.getElementsByTagName('script');
      return scripts[scripts.length - 1];
    })();
	},
	onResize: function(callback, elem) {
		elem = elem || document.querySelector('#site');
		return new ResizeSensor(elem,callback);
	}
}; 

SquareMart.RecipeManager = {
	recipe: {},

	_add: function(target, properties, condition) {
		if (condition) { 
			if (condition === target) { // condition on target is redundant
				condition = null;
			}
		}	

		var selector = condition || target;
		if (!this.recipe[selector]) {
			this.recipe[selector] = [];
			document.addSelectorListener(selector, this.attach.bind(this));	
		}

		if (condition) {
			this.recipe[condition].push({ target: target, properties: properties });
		} else {
			properties = Array.isArray(properties) ? properties : [properties];
			Array.prototype.push.apply(this.recipe[target], properties);
		}
	},

	add: function(data) {
		try {
			if (Array.isArray(data)) {
				this._add(data[0], data[1], data[2]);
			} else if (typeof data === 'object') {
				this._add(data.target, data.properties, data.condition);
			} else if (typeof data === 'string' && arguments.length > 1) {
				this._add(data, arguments[1], arguments[2]);
			}
		} catch(e) {
			console.error('problem adding recipe', data, e);
		}
	},


	attach: function(event) {
		var selector = event.selector;
		var el = event.target;

		if (!this.recipe[selector]) return false; // nothing to do

		this.recipe[selector] = this.recipe[selector].filter(function(val, i) {
			if (typeof val === 'object') { // move conditional targets to top level

				console.log('moving condition');
				this.add(val);
				return false;

			} else if (typeof val === 'function') {

				val.call(event.target, event);
				return true;

			} else {
				console.log('Adding ingredient', val, el);

				var parts = val.split('=');
				if (parts[0].indexOf('data') === 0) {

					if (parts[1]) el.setAttribute(parts[0], parts[1]);
					else el.removeAttribute(parts[0]);

				} else if (parts[0].indexOf('class') === 0) {

					var className = parts[0].replace('class-','');
					if (parts[1] === "true") el.classList.add(className);
					else el.classList.remove(className);

				}

				return true;
			}
		}, this);

		// stop listening if this is not marked to be continuous
		if (selector.charAt(selector.length-1) !== ' ') {
			delete this.recipe[selector];
			return false; // stop listening to selector
		}

		// else keep going
    el.style.visibility = 'visible';
		return true; 
	},
	// to handle edge case where selector-listener has not loaded selectors before domready
	force: function() { // force detection of loaded selectors
		console.log('forcing recipe');
		for(var selector in this.recipe) {
			var els = document.querySelectorAll(selector);
			for (var i=0; i<els.length; i++) {
				if (this.attach({ selector: selector, target: els[i] }) === false) {
					document.removeSelectorListener(selector, this.attach.bind(this));
				}
			}
		}
	}
};


// dynamically inject font awesome if needed
document.onSelector('.fa', function(event) {
	var link = document.createElement('link');
	link.setAttribute('rel', 'stylesheet');
	link.setAttribute('href', '//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css');
	document.getElementsByTagName('head')[0].appendChild(link);
});
</script>
