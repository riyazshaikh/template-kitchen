<script>
// SelectorListener By Daniel Buchner. Under Apache 2 License - https://github.com/csuwildcat/SelectorListener
// Modified for personal needs - https://github.com/riyazshaikh/SelectorListener
(function(){
	
	var events = {},
		selectors = {},
		docProto = typeof HTMLDocument !== 'undefined' ? HTMLDocument.prototype : Document.prototype,
		elemProto = typeof HTMLElement !== 'undefined' ? HTMLElement.prototype : Element.prototype,
		styles = document.createElement('style'),
		keyframes = document.createElement('style'),
		head = document.getElementsByTagName('head')[0],
		startNames = ['animationstart', 'oAnimationStart', 'MSAnimationStart', 'webkitAnimationStart'],
		startEvent = function(event){
			event.selector = (events[event.animationName] || {}).selector;
			var removeList = [];
			((this.selectorListeners || {})[event.animationName] || []).forEach(function(fn){
				if (fn.call(this, event) === false) removeList.push(fn);
			}, this);
			removeList.forEach(function(fn) {
				this.removeSelectorListener(event.selector, fn);	
			}, this);
		},
		prefix = (function() {
			var duration = 'animation-duration: 0.001s;',
				name = 'animation-name: SelectorListener !important;',
				visibility = 'visibility:hidden;',
				computed = window.getComputedStyle(document.documentElement, ''),
				pre = (Array.prototype.slice.call(computed).join('').match(/moz|webkit|ms/)||(computed.OLink===''&&['o']))[0];
			return {
				css: '-' + pre + '-',
				properties: '{' + visibility + duration + name + '-' + pre + '-' + duration + '-' + pre + '-' + name + '}',
				keyframes: !!(window.CSSKeyframesRule || window[('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1] + 'CSSKeyframesRule'])
			};
		})();
		
	styles.type = keyframes.type = "text/css";
	head.appendChild(styles);
	head.appendChild(keyframes);
	
	docProto.addSelectorListener = elemProto.addSelectorListener = function(selector, fn){
		var key = selectors[selector],
			listeners = this.selectorListeners = this.selectorListeners || {};
			
		if (key) events[key].count++;
		else {
			key = selectors[selector] = 'SelectorListener-' + Math.random().toString(16).substr(2, 9);
			var node = document.createTextNode('@' + (prefix.keyframes ? prefix.css : '') + 'keyframes ' + key + ' {'
				+'from { outline-color: #fff; } to { outline-color: #000; }'
			+ '}');
			keyframes.appendChild(node);
			var rule = document.createTextNode(selector + prefix.properties.replace(/SelectorListener/g, key));
			styles.appendChild(rule);
			events[key] = { count: 1, selector: selector, keyframe: node, rule: rule };
		} 
		
		if (listeners.count) listeners.count++;
		else {
			listeners.count = 1;
			startNames.forEach(function(name){
				this.addEventListener(name, startEvent, false);
			}, this);
		}
		
		(listeners[key] = listeners[key] || []).push(fn);
	};
	
	docProto.removeSelectorListener = elemProto.removeSelectorListener = function(selector, fn){
		var listeners = this.selectorListeners || {},
			key = selectors[selector],
			listener = listeners[key] || [],
			index = listener.indexOf(fn);
			
		if (index > -1){
			var event = events[selectors[selector]];
			event.count--;
			if (!event.count){
				styles.removeChild(event.rule);
				keyframes.removeChild(event.keyframe);
				delete events[key];
				delete selectors[selector];
			}
			
			listeners.count--;
			listener.splice(index, 1);
			if (!listeners.count) startNames.forEach(function(name){
				this.removeEventListener(name, startEvent, false);
			}, this);
		}
	};

	// Single invocation version
	HTMLDocument.prototype.onSelector = HTMLElement.prototype.onSelector = function(selector,fn) {
		this.addSelectorListener(selector, function(event) { fn(event); return false; });
	};

})();
</script>

<script>
// ResizeSensor By Marc J. Schmidt. Under MIT license - https://github.com/marcj/css-element-queries/blob/master/LICENSE.
!function(){this.ResizeSensor=function(e,t){function i(){this.q=[],this.add=function(e){this.q.push(e)};var e,t;this.call=function(){for(e=0,t=this.q.length;t>e;e++)this.q[e].call()}}function s(e,t,i){var s;return function(){var o=this,n=arguments,r=function(){s=null,i||e.apply(o,n)},l=i&&!s;clearTimeout(s),s=setTimeout(r,t),l&&e.apply(o,n)}}function o(e,t){return e.currentStyle?e.currentStyle[t]:window.getComputedStyle?window.getComputedStyle(e,null).getPropertyValue(t):e.style[t]}function n(e,t){if(e.resizedAttached){if(e.resizedAttached)return void e.resizedAttached.add(t)}else e.resizedAttached=new i,e.resizedAttached.add(t);e.resizeSensor=document.createElement("div"),e.resizeSensor.className="resize-sensor";var n="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;",r="position: absolute; left: 0; top: 0;";e.resizeSensor.style.cssText=n,e.resizeSensor.innerHTML='<div class="resize-sensor-expand" style="'+n+'"><div style="'+r+'"></div></div><div class="resize-sensor-shrink" style="'+n+'"><div style="'+r+' width: 200%; height: 200%"></div></div>',e.appendChild(e.resizeSensor),{fixed:1,absolute:1}[o(e,"position")]||(e.style.position="relative");var l,d,c=e.resizeSensor.childNodes[0],h=c.childNodes[0],a=e.resizeSensor.childNodes[1],f=(a.childNodes[0],function(){h.style.width=c.offsetWidth+10+"px",h.style.height=c.offsetHeight+10+"px",c.scrollLeft=c.scrollWidth,c.scrollTop=c.scrollHeight,a.scrollLeft=a.scrollWidth,a.scrollTop=a.scrollHeight,l=e.offsetWidth,d=e.offsetHeight});f();var u=function(){e.resizedAttached&&e.resizedAttached.call()},v=function(e,t,i){e.attachEvent?e.attachEvent("on"+t,i):e.addEventListener(t,i)},z=function(){(e.offsetWidth!=l||e.offsetHeight!=d)&&u(),f()};v(c,"scroll",s(z,100)),v(a,"scroll",s(z,100))}var r=Object.prototype.toString.call(e),l="[object Array]"===r||"[object NodeList]"===r||"[object HTMLCollection]"===r||"undefined"!=typeof jQuery&&e instanceof jQuery||"undefined"!=typeof Elements&&e instanceof Elements;if(l)for(var d=0,c=e.length;c>d;d++)n(e[d],t);else n(e,t);this.detach=function(){if(l)for(var t=0,i=e.length;i>t;t++)ResizeSensor.detach(e[t]);else ResizeSensor.detach(e)}},this.ResizeSensor.detach=function(e){e.resizeSensor&&(e.removeChild(e.resizeSensor),delete e.resizeSensor,delete e.resizedAttached)}}();
</script>

<script>
// Rafscroll By Kevin Foley. Under WTFPL - http://www.wtfpl.net/txt/copying/
!function(){function i(i,t){return i?"function"!=typeof i?void console.warn("rafScroll: Invalid callback type."):(this._scrolling=!1,this._callback=i,this._args=t||[],void this.subscribe()):void console.warn("rafScroll: No callback supplied, not initiating.")}function t(i){this._mostRecentScrollEvent=i,this._scrolling===!1&&(this._scrolling=!0,o.call(this)),this._scrollTimeout&&clearTimeout(this._scrollTimeout);var t=this;this._scrollTimeout=setTimeout(function(){t._scrolling=!1},s)}function o(){this._args.unshift(this._mostRecentScrollEvent),this._callback.apply(window||{},this._args),this._args.shift(),this._scrolling===!0&&requestAnimationFrame(o.bind(this))}if(!window.requestAnimationFrame)return void console.info("Your browser does not support requestAnimationFrame. There is a nice polyfill you can use here.","https://gist.github.com/paulirish/1579671");var s=100;i.prototype={subscribe:function(){addEventListener("scroll",t.bind(this),!1)},unsubscribe:function(){removeEventListener("scroll",t.bind(this),!1)}},"function"==typeof define&&define.amd?define("rafscroll",i):"undefined"!=typeof module&&"undefined"!=typeof exports?module.exports={rafscroll:i}:window.rafscroll=i}();
</script>

<script>
// check for old browsers - https://browser-update.org/
function $buo_f(){var e=document.createElement("script");e.src="//browser-update.org/update.min.js",document.body.appendChild(e)}var $buoop={vs:{i:10,f:35,o:25,s:7},c:2};try{document.addEventListener("DOMContentLoaded",$buo_f,!1)}catch(e){window.attachEvent("onload",$buo_f)}
</script>

<script>
window.SquareMart = {};

SquareMart.Utils = {
	currentScript: function() {
		return document.currentScript || (function() {
      var scripts = document.getElementsByTagName('script');
      return scripts[scripts.length - 1];
    })();
	}
}; 
</script>