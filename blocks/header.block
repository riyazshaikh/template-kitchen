<header class="header content" data-align=space-between>
  {.section website}
    <div class="site-logo" data-content-field="site-title">
      {.if logoImageUrl}
        <a href="/"><img class="logo-image" src="{logoImageUrl}?format=1500w" alt="{siteTitle}" /></a>
      {.or}
        <a href="/" data-text-shrink>{siteTitle}</a>
      {.end}
    </div>
  {.end}
  <div class="main-nav invisible" data-content-field="navigation-mainNav" data-folder="dropdown">
    <squarespace:navigation navigationId="mainNav" template="navigation"/>
  </div>
  <squarespace:block-field class="block" id="header-block" columns="1" label="Header Block Content"/>
  {@|apply slidebar.block}
</header>
<script>
(function(){

  var header = document.currentScript.parentNode;
  var head = document.getElementsByTagName('head')[0];
  var stylesheet, resizeOverlaid, resizeOverflow, rule;
  var nav = header.querySelector('.main-nav');

  var overflowCheck = function() {
    nav.classList.remove('header-overflow');

    if (header.scrollWidth > header.offsetWidth) nav.classList.add('header-overflow');
  };

  var observer = new MutationObserver(function() {

    // Add header height as a padding to avoid overlapping content below
    if (header.dataset.display === 'overlaid') {
      stylesheet = document.createElement('style');
      stylesheet.type = "text/css";
      rule = document.createTextNode('[data-overlap=header] { padding-top:' + header.offsetHeight + 'px; }');

      head.appendChild(stylesheet);
      stylesheet.appendChild(rule);

      console.log('header init', header.offsetHeight);
      // refresh padding on header resize
      resizeOverlaid && resizeOverlaid.detach();
      resizeOverlaid = new ResizeSensor(header, function() {
        console.log('header', header.offsetHeight);
        stylesheet.removeChild(rule);
        rule = document.createTextNode('[data-overlap=header] { padding-top:' + header.offsetHeight + 'px; }');
        stylesheet.appendChild(rule);
      });
    } else { // remove anything added
      resizeOverlaid && resizeOverlaid.detach();
      stylesheet && head.removeChild(stylesheet);
      resizeOverlaid = null;
      stylesheet = null;
      rule = null;
    }

    if (header.dataset.nav === 'auto') {
      overflowCheck();
      resizeOverflow = new ResizeSensor(header, overflowCheck);
    } else {
      nav.classList.remove('header-overflow');
      resizeOverflow && resizeOverflow.detach();
      resizeOverflow = null;
    }

    nav.classList.remove('invisible');
  });

  observer.observe(header, {
    attributes: true,
    attributeFilter: ['data-display', 'data-nav']
  });

})();
</script>
