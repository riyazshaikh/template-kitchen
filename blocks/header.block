<header class="header content" data-align=space-between-oneline>
  {.section website}
    <div class="site-logo" data-content-field="site-title">
      {.if logoImageUrl}
        <a href="/"><img class="logo-image" src="{logoImageUrl}?format=1500w" alt="{siteTitle}" /></a>
      {.or}
        <a href="/" data-text-shrink>{siteTitle}</a>
      {.end}
    </div>
  {.end}
  <div class="main-nav" data-content-field="navigation-mainNav" data-folder="dropdown">
    <squarespace:navigation navigationId="mainNav" template="navigation"/>
  </div>
  <squarespace:block-field class="block" id="header-block" columns="1" label="Header Block Content"/>
  {@|apply slidebar.block}
</header>
<script>
(function(){

  this.header = document.currentScript.parentNode;
  this.head = document.getElementsByTagName('head')[0];

  this.observer = new MutationObserver(function() {

    // Add header height as a padding to avoid overlapping content below
    if (this.header.dataset.display === 'overlaid') {
      this.stylesheet = document.createElement('style');
      this.stylesheet.type = "text/css";
      this.rule = document.createTextNode('[data-overlap=header] { padding-top:' + this.header.offsetHeight + 'px; }');

      this.head.appendChild(stylesheet);
      this.stylesheet.appendChild(this.rule);

      console.log('header init', this.header.offsetHeight);
      // refresh padding on header resize
      this.resize && this.resize.detach();
      this.resize = new ResizeSensor(this.header, function() {
        console.log('header', this.header.offsetHeight);
        this.stylesheet.removeChild(this.rule);
        this.rule = document.createTextNode('[data-overlap=header] { padding-top:' + this.header.offsetHeight + 'px; }');
        this.stylesheet.appendChild(this.rule);
      });
    } else { // remove anything added
      this.resize && this.resize.detach();
      this.stylesheet && this.head.removeChild(this.stylesheet);
      delete this.resize;
      delete this.stylesheet;
      delete this.rule;
    }

  }.bind(this));

  this.observer.observe(this.header, {
    attributes: true,
    attributeFilter: ['data-display']
  });

})();
</script>
